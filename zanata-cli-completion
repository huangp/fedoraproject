# 
# Completion for Zanata Java command-line client
# Generated by BashCompletionGenerator
# 
_zanata()
{
    local cur prev opts base cmds
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    base="${COMP_WORDS[1]}"
    cmds="list-remote pull push put-project put-user put-version stats"
    if [[ ${#COMP_WORDS[@]} == 2 ]] ; then
        COMPREPLY=( $(compgen -W "${cmds} --help" -- ${cur}) )
        return 0
    fi
    if [[ ${COMP_WORDS[1]} == '--help' ]] ; then
        COMPREPLY=( $(compgen -W "${cmds}" -- ${cur}) )
        return 0
    fi
    case "${prev}" in 
        --user-config)
            COMPREPLY=( $(compgen -df ${cur}) )
            return 0
            ;;
        --project-config)
            COMPREPLY=( $(compgen -df ${cur}) )
            return 0
            ;;
        --src-dir)
            COMPREPLY=( $(compgen -d ${cur}) )
            return 0
            ;;
        --trans-dir)
            COMPREPLY=( $(compgen -d ${cur}) )
            return 0
            ;;
        --url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
        --source-checkout-url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
        --source-view-url)
            COMPREPLY=( $(compgen -A hostname ${cur}) )
            return 0
            ;;
    esac
    case "${base}" in 
        list-remote)
            local list-remote_opts="--project --project-config --project-version --project-type --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${list-remote_opts}" -- ${cur}) )
            return 0
            ;;
        put-project)
            local put-project_opts="--project-slug --project-name --project-desc --source-view-url --source-checkout-url --default-project-type --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${put-project_opts}" -- ${cur}) )
            return 0
            ;;
        stats)
            local stats_opts="--format --details --word --docid --project --project-config --project-version --project-type --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${stats_opts}" -- ${cur}) )
            return 0
            ;;
        put-version)
            local put-version_opts="--project-type --version-project --version-slug --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${put-version_opts}" -- ${cur}) )
            return 0
            ;;
        pull)
            local pull_opts="--locales --pull-type --create-skeletons --encode-tabs --include-fuzzy --src-dir --trans-dir --from-doc --dry-run --project --project-config --project-version --project-type --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${pull_opts}" -- ${cur}) )
            return 0
            ;;
        put-user)
            local put-user_opts="--user-name --user-email --user-username --user-passwordhash --user-key --user-langs --user-roles --user-disabled --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${put-user_opts}" -- ${cur}) )
            return 0
            ;;
        push)
            local push_opts="--includes --excludes --case-sensitive --locales --src-lang --copy-trans --merge-type --push-type --default-excludes --chunk-size --file-types --exclude-locale-filenames --validate --src-dir --trans-dir --from-doc --dry-run --project --project-config --project-version --project-type --url --username --key --user-config --debug --help --errors --quiet -B"
            COMPREPLY=( $(compgen -W "${push_opts}" -- ${cur}) )
            return 0
            ;;
    esac
}
complete -F _zanata zanata-cli